// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/puppetlabs/relay-pls/pkg/manager"
	"github.com/puppetlabs/relay-pls/pkg/opt"
	"github.com/puppetlabs/relay-pls/pkg/plspb"
	"github.com/puppetlabs/relay-pls/pkg/server"
	"github.com/puppetlabs/relay-pls/pkg/telemetry"
	"github.com/puppetlabs/relay-pls/pkg/vault"
)

// Injectors from wire.go:

func NewBigQueryServer(ctx context.Context, cfg *opt.Config) (plspb.LogServer, func(), error) {
	keyManager := manager.NewKeyManager()
	client, err := vault.NewClient(ctx, cfg)
	if err != nil {
		return nil, nil, err
	}
	logMetadataManager, err := manager.NewVaultLogMetadataManager(cfg, client)
	if err != nil {
		return nil, nil, err
	}
	bigqueryClient, err := server.NewBigQueryClient(ctx, cfg)
	if err != nil {
		return nil, nil, err
	}
	table, err := server.NewBigQueryTable(ctx, cfg, bigqueryClient)
	if err != nil {
		return nil, nil, err
	}
	config := telemetry.ProvidePrometheusConfig()
	exporter, err := telemetry.ProvidePrometheusExporter(config)
	if err != nil {
		return nil, nil, err
	}
	meter := telemetry.ProvideMeter(exporter)
	logServer := server.NewBigQueryServer(cfg, keyManager, logMetadataManager, bigqueryClient, table, meter)
	return logServer, func() {
	}, nil
}

func NewInMemoryServer(ctx context.Context, cfg *opt.Config) (plspb.LogServer, func(), error) {
	keyManager := manager.NewKeyManager()
	client, err := vault.NewClient(ctx, cfg)
	if err != nil {
		return nil, nil, err
	}
	logMetadataManager, err := manager.NewVaultLogMetadataManager(cfg, client)
	if err != nil {
		return nil, nil, err
	}
	logServer := server.NewInMemoryServer(cfg, keyManager, logMetadataManager)
	return logServer, func() {
	}, nil
}

func NewTelemetryServer(ctx context.Context, cfg *opt.Config) (*telemetry.TelemetryServer, func(), error) {
	config := telemetry.ProvidePrometheusConfig()
	exporter, err := telemetry.ProvidePrometheusExporter(config)
	if err != nil {
		return nil, nil, err
	}
	telemetryServer := telemetry.NewTelemetryServer(exporter, cfg)
	return telemetryServer, func() {
	}, nil
}
